/**
 * Represents an interface object of Menus Api.
 *
 * @property {function} getAdminsInfo - Get pages includes in menu by marker.
 */
interface IMenus {
    getMenusByMarker(marker: string, langCode: string): Promise<IMenusEntity>;
}
/**
 * Represents a position object.
 *
 * @interface
 * @property {Array<IMenusPages>} children - The optional parameter. Contains array with child page objects.
 * @property {number} id - The unique identifier of the menu.
 * @property {string} pageUrl - The page url string.
 * @property {ILocalizeInfo} localizeInfos - The menu data, taking into account localization.
 * @property {number} position - The menu position.
 * @property {number | null} parentId - The menu parent id.
 */
interface IMenusPages {
    children?: Array<IMenusPages> | IMenusPages;
    id: number;
    pageUrl: string;
    localizeInfos: Record<string, any>;
    position: number;
    parentId: number | null;
}
/**
 * Represents a position object.
 *
 * @interface
 * @property {number} id - The unique identifier of the menu.
 * @property {string} identifier - The menu identifier.
 * @property {Record<string, any>} localizeInfos - The menu data, taking into account localization.
 * @property {Array<IMenusPages>} pages - Array of menu pages.
 */
interface IMenusEntity {
    id: number;
    identifier: string;
    localizeInfos: Record<string, any>;
    pages: Array<IMenusPages> | IMenusPages;
}
export { IMenus, IMenusEntity, IMenusPages };
