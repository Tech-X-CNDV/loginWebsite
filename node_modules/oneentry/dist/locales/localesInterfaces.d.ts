/**
 * Represents an interface object of Locales Api.
 *
 * @property {function} getLocales - Find all active language localization objects.
 */
interface ILocales {
    getLocales(): Promise<Array<ILocalEntity>>;
}
/**
 * Represents a locales object.
 *
 * @interface
 * @property {number} id - The unique identifier of the locales.
 * @property {string} shortCode - The shortCode of locales.
 * @property {string} code - The full language code.
 * @property {string} name - The language name.
 * @property {string} nativeName - The native language name.
 * @property {boolean} isActive - Active language flag.
 * @property {string} image - The language image.
 * @property {number} position - The language position.
 */
interface ILocalEntity {
    id: number;
    shortCode: string;
    code: string;
    name: string;
    nativeName: string;
    isActive: boolean;
    image: string | null;
    position: number;
}
export { ILocales, ILocalEntity };
