/**
 * Represents an interface object of Orders Api.
 *
 * @property {function} getSessions - Get list of payment sessions.
 * @property {function} getSessionById - Get a single payment session object by its identifier.
 * @property {function} createSession - Creation of payment session.
 * @property {function} getConnected - Get payment settings.
 * @property {function} getAccounts - Get all payment accounts as an array.
 * @property {function} getAccountById - Get a single payment account object by its identifier.
 * @property {function} webhookStripe - Webhook for Stripe.
 * @property {function} setAccessToken - Only for custom authorization. An intermediate method for setting up an access token.
 */
interface IPaymentsApi {
    getSessions(limit: number, offset: number): Promise<Array<ISessionEntity>>;
    getSessionById(id: number): Promise<ISessionEntity>;
    createSession(orderId: number, type: 'session' | 'intent', automaticTaxEnabled?: boolean): Promise<ICreateSessionEntity>;
    getConnected(): Promise<IConnectedEntity | null>;
    getAccounts(): Promise<Array<IAccountsEntity>>;
    getAccountById(id: number): Promise<IAccountsEntity>;
    webhookStripe(): Promise<boolean>;
}
/**
 *
 * @interface
 * @property {number} quantity - Quantity information.
 * @property {number} amount - Amount information.
 * @property {string} currency - Currency information.
 * @property {string} name - Name.
 * @property {string} description - Description.
 */
interface ILineItems {
    quantity: number;
    amount: number;
    currency: string;
    name: string;
    description: string;
}
/**
 * @interface
 * @property {number} amount
 * @property {string} currency
 */
interface IIntent {
    amount: number;
    currency: string;
}
/**
 * @interface
 * @property {number} id - Object identifier.
 * @property {string} updatedDate - Object modification date.
 * @property {string} type - Type may be 'session' or 'intent'.
 * @property {string} status - payment status.
 * @property {number} orderId - Order identifier.
 * @property {number} paymentAccountId - Payment account object identifier.
 * @property {string} paymentUrl - Payment link.
 * @property {string} clientSecret - Client secret key.
 */
interface ISessionEntity {
    id: number;
    updatedDate: string;
    type: 'session' | 'intent';
    orderId: number;
    paymentAccountId: number;
    paymentUrl: string;
    clientSecret: string;
    status: string;
}
interface ICreateSessionEntity {
    id: number;
    updatedDate: string;
    version: number;
    identifier: string;
    paymentUrl: string;
}
/**
 * @interface
 * @property {string} [stripeAccountId] - Identifier of connected Stripe account.
 * @property {string} [stripePublishableKey] - Stripe Connect public key.
 */
interface IConnectedEntity {
    stripeAccountId: string;
    stripePublishableKey: string;
}
/**
 * @interface
 * @property {number} id - Object identifier.
 * @property {string} identifier - Text identifier for the recording field.
 * @property {Record<string, any>} localizeInfos - Json description of the payment account object.
 * @property {string} type - Type may be 'stripe', 'paypal' or 'custom'.
 * @property {boolean} isVisible - Visibility indicator of the payment account.
 */
interface IAccountsEntity {
    id: number;
    identifier: string;
    localizeInfos: Record<string, any>;
    type: 'stripe' | 'custom';
    isVisible: boolean;
}
export { IAccountsEntity, IConnectedEntity, ISessionEntity, ILineItems, IPaymentsApi, IIntent, ICreateSessionEntity };
