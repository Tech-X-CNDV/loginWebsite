/**
 * Represents an interface object of Templates Preview Api.
 *
 * @property {function} getTemplatesPreview - Get all template objects.
 *
 * @property {function} getTemplatesPreviewById - Get one template object by id.
 *
 * @property {function} getTemplatesPreviewByMarker - Get one template object by marker.
 */
interface ITemplatesPreview {
    getTemplatePreviews(langCode: string): Promise<Array<ITemplatesPreviewEntity>>;
    getTemplatePreviewById(id: number, langCode: string): Promise<ITemplatesPreviewEntity>;
    getTemplatePreviewByMarker(marker: string, langCode: string): Promise<ITemplatesPreviewEntity>;
}
/**
 * Represents a template preview entity object.
 *
 * @interface
 * @property {number} id - The unique identifier of the position.
 * @property {string} identifier - The textual identifier for the record field.
 * @property {object} proportion - Object contains info by proportion template preview.
 * @property {Record<string, any>} localizeInfos - The name of the template, taking into account localization.
 * @property {number} position - The position of the object.
 *
 */
interface ITemplatesPreviewEntity {
    id: number;
    version: number;
    identifier: string;
    proportion: {
        horizontal: IProportion | null;
        vertical: IProportion | null;
        square: ISquare;
    };
    title: string;
    position: number;
}
interface IProportion {
    height: number | null;
    weight: number | null;
    marker: string;
    alignmentType: string;
}
interface ISquare {
    marker: string;
    slide: number;
    alignmentType: string;
}
export { ITemplatesPreview, ITemplatesPreviewEntity, ISquare, IProportion };
