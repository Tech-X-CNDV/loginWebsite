/**
 * Represents a interface object of Admins Api.
 *
 * @property {function} getAdminsInfo - Get all user objects - admins.
 */
interface IAdmins {
    getAdminsInfo(langCode: string, offset?: number, limit?: number): Promise<Array<IAdminEntity>>;
}
/**
 * Represents a position object.
 *
 * @interface
 * @property {number} id - The unique identifier of the position.
 * @property {number} position - The position of the object.
 * @property {number} objectId - The unique identifier of the object.
 * @property {string} objectType - The type of the object.
 * @property {boolean} isLocked - Indicates whether the position is locked or not.
 * @property {number} objectCategoryId - The unique identifier of the object's category.
 */
interface IPosition {
    id: number;
    position: number;
    objectId: number;
    objectType: string;
    isLocked?: boolean;
    objectCategoryId?: number;
}
/**
 * Represents an object with various properties.
 *
 * @interface
 * @property {number} id - The identifier of the object.
 * @property {string} identifier - The textual identifier for the record field.
 * @property {Record<string, any>} attributeValues - The attributes with values used by the object.
 * @property {number} attributeSetId - The identifier of the attribute set being used.
 * @property {boolean} isSync - Indication of page indexing.
 * @property {number} position - The position of the object.
 */
interface IAdminEntity {
    attributeSetId: number | null;
    attributeValues: Record<string, any>;
    id: number;
    identifier: string;
    isSync: boolean;
    position: number;
}
export { IAdmins, IAdminEntity, IPosition };
