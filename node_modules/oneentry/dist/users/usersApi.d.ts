import AsyncModules from "../base/asyncModules";
import { IUserBody, IUserEntity, IUsers } from "./usersInterfaces";
import StateModule from "../base/stateModule";
/**
 * Controllers for working with users
 */
export default class UsersApi extends AsyncModules implements IUsers {
    protected state: StateModule;
    protected _url: string;
    constructor(state: StateModule);
    /**
     * Getting the data of an authorized user.
     *
     * @description This method requires user authorization. For more information about configuring the authorization module, see the documentation in the configuration settings section of the SDK.
     *
     * @param {string} [langCode] Required parameter lang code.
     */
    getUser(langCode?: string): Promise<IUserEntity>;
    /**
     * Updating a single user object.
     * @description This method requires user authorization. For more information about configuring the authorization module, see the documentation in the configuration settings section of the SDK.
     *
     * @param {object} data - Request body.
     * @param {string} langCode - Optional language field
     *
     * @example
     * {
     *   "formIdentifier": "reg",
     *   "authData": [
     *     {
     *       "marker": "password",
     *       "value": "12345"
     *     }
     *   ],
     *   "formData": {
     *         "marker": "last_name",
     *         "type": "string",
     *         "value": "Username"
     *   },
     *   "notificationData": {
     *     "email": "example@oneentry.cloud",
     *     "phonePush": "",
     *     "phoneSMS": "+99999999999"
     *   }
     * }
     */
    updateUser(data: IUserBody, langCode?: string): Promise<boolean>;
    /**
     * Adds FCM token for sending Push notification.
     * @description This method requires user authorization. For more information about configuring the authorization module, see the documentation in the configuration settings section of the SDK.
     *
     * @param {string} token - Cloud messaging token.
     */
    addFCMToken(token: string): Promise<boolean>;
    /**
     * Delete FCM token.
     * @description This method requires user authorization. For more information about configuring the authorization module, see the documentation in the configuration settings section of the SDK.
     *
     * @param {string} token - Cloud messaging token.
     */
    deleteFCMToken(token: string): Promise<boolean>;
}
